<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sfdc-sapi-alternate-channel-test-suite.xml" />
	<munit:test name="sfdc-sapi-alternate-channel-test-suite-sfdc-sapi-alternate-channel-flowCreateTest" doc:id="dc1dc08f-3e97-4490-ab02-fed6464a4719" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when query sf record type" doc:id="195b4466-a451-4b4b-b7fa-a2950069eda2" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Record Type" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varRecordTypeId" value='#[[{Id:"25687",Name:"Max"}]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when query sf for alternate channel" doc:id="7d2fa4fc-468e-451a-9c0b-ef7e64b25f3e" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Alternate Channel" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varGetAddressRecords" value="#[[]]" mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when create alternate channel in SF" doc:id="3f246a10-a741-4f89-a629-d3b34d8d6861" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Create Alternate Channel Record in Salesforce" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varUpdateResponse" value='#[{status:"success"}]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="5e47fdf1-9b31-4efc-89b1-bde0dd8c4fb5" >
				<munit:payload value='#[{
"EMPLID":"0000002",
"COUNTRY_CODE":"",
"PHONE_TYPE":"HOME",
"EXTENSION":"",
"PHONE":"714/493-9189",
"PREF_PHONE_FLAG":"Y"
}]' mediaType="application/java" />
				<munit:attributes value='#[{queryParams:
{ViewName: "phone"}}]' mediaType="application/java" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\sfdc\alternate-channels:application\json:sfdc-api-config" doc:id="7b527041-926a-4bd1-a860-0e690a10f8ee" name="post:\sfdc\alternate-channels:application\json:sfdc-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="808ce4e4-5ad6-4722-ad70-613a69921d94" expression="#[vars.varUpdateResponse]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sfdc-sapi-alternate-channel-test-suite-sfdc-sapi-alternate-channel-flowUpdateTest" doc:id="76c602fc-231a-4664-a36c-60da2f7c7978" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when query sf record type" doc:id="b56fd294-7f0b-48e8-90fe-1e36203b19fd" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Record Type" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varRecordTypeId" value='#[[{Id:"25687",Name:"Max"}]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when query sf for alternate channel" doc:id="ec0c9289-9dae-46ea-a1da-75b413074303" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Alternate Channel" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varGetAddressRecords" value=' #[[{AQB__AccountExternalIDLinkField__c:"344789",AQB__Type__c:"Home",Id: "23465" }]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when create alternate channel in SF" doc:id="48005759-0ea3-4057-b756-53fc47f4e0bd" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Alter Channel Record in Salesforce" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varUpdateResponse" value='#[{status:"success"}]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="5e1fffe2-f9db-4b47-85b8-cab443f43c9c" >
				<munit:payload value='#[[{
"EMPLID":"0000002",
"COUNTRY_CODE":"",
"PHONE_TYPE":"HOME",
"EXTENSION":"",
"PHONE":"714/493-9189",
"PREF_PHONE_FLAG":"Y"
}]]' mediaType="application/java" />
				<munit:attributes value='#[{queryParams:
{ViewName: "phone"}}]' mediaType="application/java" />
			
</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\sfdc\alternate-channels:application\json:sfdc-api-config" doc:id="f69f42fa-c059-48f9-8af6-9005956980a9" name="post:\sfdc\alternate-channels:application\json:sfdc-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="9cb5ef3f-c470-48fe-b082-78db19635af0" expression="#[vars.varUpdateResponse]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
<munit:test name="sfdc-sapi-alternate-channel-test-suite-sfdc-sapi-alternate-channel-flowPhoneTest" doc:id="8c802cb5-4533-4a9b-8555-0b4e6300b6dd" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when query sf record type" doc:id="0336b806-5ee4-410f-ac15-42ee89cf0eae" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Record Type" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varRecordTypeId" value='#[[{Id:"25687",Name:"Max"}]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when query sf for alternate channel" doc:id="99b51d72-3948-48be-8cd6-3ca67344f59f" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Alternate Channel" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varGetAddressRecords" value=' #[[{AQB__AccountExternalIDLinkField__c:"344789",AQB__Type__c:"Home",Id: "23465" }]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when create alternate channel in SF" doc:id="d8d21be9-5942-4ee2-8809-79f872bc39c4" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Alter Channel Record in Salesforce" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varUpdateResponse" value='#[{status:"success"}]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="a14f81bf-3497-424d-be49-30f1f9416177" >
				<munit:payload value='#[[{
"EMPLID":"0000002",
"COUNTRY_CODE":"",
"PHONE_TYPE":"HOME",
"EXTENSION":"",
"PHONE":"714/493-9189",
"PREF_PHONE_FLAG":"Y"
}]]' mediaType="application/java" />
			
</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\sfdc\alternate-channels:application\json:sfdc-api-config" doc:id="323a07ae-825e-4806-b0ce-4d56effa975c" name="post:\sfdc\alternate-channels:application\json:sfdc-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="19b20729-091f-42e8-8b47-e3f030b60c9b" expression="#[vars.varUpdateResponse]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
<munit:test name="sfdc-sapi-alternate-channel-test-suite-sfdc-sapi-alternate-channel-flowAddressTest" doc:id="fa387fd6-ffa4-4346-99e6-919606b4ead3" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when query sf record type" doc:id="31fad2f3-b9dd-4d24-b9db-baa679dd90cd" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Record Type" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varRecordTypeId" value='#[[{Id:"25687",Name:"Max"}]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when query sf for alternate channel" doc:id="d8a6c720-fcba-45d9-a743-f0ff5cd7868f" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Query Salesforce for Alternate Channel" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varGetAddressRecords" value=' #[[{AQB__AccountExternalIDLinkField__c:"344789",AQB__Type__c:"Home",Id: "23465" }]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when create alternate channel in SF" doc:id="fa190963-855e-49da-9520-a2a8dbe3dc4e" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Alter Channel Record in Salesforce" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="varUpdateResponse" value='#[{status:"success"}]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="66bcbe83-4909-4360-9559-070960d3e229" >
				<munit:payload value='#[{
  "EMPLID":"0000002",
  "ADDRESSLONG":"6102 Darlington Ave ",
  "ADDRESS_TYPE":"PERM",
  "ADDRESS2":"",
  "CITY":"Buena Park",
  "ADDRESS1":"6102 Darlington Ave",
  "COUNTY":"",
  "ADDR_TYPE_SHORT":"Permanent",
  "STATE_DESCR":"California",
  "LAST_UPDT_DTTM":"12-06-16",
  "COUNTRY_CD":"USA",
  "COUNTRY_NM":"United States",
  "ADDRESSLONG3":"",
  "STATE":"CA",
  "POSTAL":"90621-2404",
  "ADDRESSLINE":"6102 Darlington Ave Buena Park, CA 90621-2404 "
}]' mediaType="application/java" />
				<munit:attributes value='#[{queryParams:
{ViewName: "address"}}]' mediaType="application/java" />

			
</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\sfdc\alternate-channels:application\json:sfdc-api-config" doc:id="e88d6012-bebd-4009-ae2c-e748433f8bfe" name="post:\sfdc\alternate-channels:application\json:sfdc-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="3edba93d-0cb6-4a8c-9a43-c5c1848cb979" expression="#[vars.varUpdateResponse]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
</mule>
